.module KeyInterrupt
.var byte, keyState
;Wait for key press, destroys A
WaitForKey:
    halt
    ld a,(keyState)
    or a
    jr z,WaitForKey ;A = 0, keys have not been released
    cp FFh
    jr z,WaitForKey ;A = FFh, no keys pressed
    push af
    xor a
    ld (keyState),a ;Acknowledge key
    pop af
    ret

;Interrupt that scans for keys and sets a byte for the last key pressed
;Key scan protocol:
;   Interrupt gets key code, sets keyState to code
;   WaitForKey reads code, ACKs by setting keyState to 00h
;   If interrupt sees keyState == 00h, it won't set another key until all keys are released
;   before accepting another key press
;It's imperative that this interrupt use no absolute jumps, as it is not .relocated
KeyScanInterrupt:
    exx
    ex af, af' ;'Fix syntax hilight
    ld a,%00000000 ;ACK interrupts
    out (03h),a

    ;Scan keys
    ld a,FFh
    out (01h),a
    ld a,%10111100 ;Del group, Clear group and arrow key group
    out (01h),a
    or a
    push hl
    sbc hl,hl
    pop hl

    in a,(01h)
    or %00010000
    ld b,a ;B = key code

    ld a,(keyState)
    or a
    ld a,b ;A = key code
    jr nz,{@}
    ld a,FFh
    cp b
    jr nz,_endKeyScan   ;If not all keys are released, don't set that they are
    @:
    ld (keyState),a
_endKeyScan:
    ld a,%00001010 ;Enable first timer. No on key
    out (03h),a
    exx
    ex af, af' ;'Fix syntax hilight
    ei
    ret
KeyScanInterruptEnd:

interruptTable = 8100h; ramCode
interruptLoc = 8C8Ch ;statVars
SetupInterrupt:
    di
    ;Copy interrupt to StatVars
    ld hl,KeyScanInterrupt
    ld de,interruptLoc
    ld bc,KeyScanInterruptEnd - KeyScanInterrupt
    ldir

    ;Set up interrupt table
    ld a,interruptLoc
    ld hl,interruptTable
    ld b,0
_writeJumpTable:
        ld (hl),a
        inc hl
        djnz _writeJumpTable
    ld (hl),a ;257'th byte of table

    ld a,interruptTable >> 8
    ld i,a
    ld a,%00001010 ;Enable first timer. No on key.
    out (03h),a

    ld a,%00000010
    out (04h),a ;Faster interrupt speed

    ld a,FFh
    ld (keyState),a ;Set keystate to all released
    im 2
    ei
    ret


;Restore OS interrupts
RestoreInterrupt:
    di
    ld a,0Bh
    out (03h),a ;Normal interrupt sources

    ld a,%00000110
    out (04h),a ;Normal interrupt speed

    im 1
    b_call(_DelRes) ;We trashed star vars
    ret
.endmodule
